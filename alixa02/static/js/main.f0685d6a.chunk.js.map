{"version":3,"sources":["composant/About.js","classes/contact.js","composant/FicheContact.js","composant/AjoutContact.js","composant/ListeContacts.js","composant/Home.js","composant/login.js","app01.js","serviceWorker.js","index.js"],"names":["About","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nextProps","nextState","prevProps","prevState","react_default","a","createElement","Component","Contact","IdContact","LastNameContact","FirstNameContact","AddressContact","CityContact","ZIPContact","FollowedContact","FicheContact","_this","undefined","contactselected","state","selectContact","console","log","setState","getFicheDetail","AjoutContact","tabname","saisie","e","parseInt","target","id","value","submit","preventDefault","action","contact","init","index","_this2","tab","i","push","map","class","for","getlibelle","onChange","type","getObjet","placeholder","name","novalidate","onSubmit","getrenderform","apiUrl","ListeContacts","bajout","maxcontact","selectedModContact","event","tabcontacts","filter","bliste","deleteContact","axios","delete","then","res","data","error","ajout","ajoutC","tabC","user","post","reset","modifieC","length","put","selectedContact","bind","assertThisInitialized","getCreateTab","get","response","ocontacts","_this3","href","onClick","_this4","bmodifC","bajoutC","composant_AjoutContact","scope","getAfficheListe","composant_FicheContact","Home","login","logged","Link","to","Route","path","component","MonRoute","BrowserRouter","Login","Boolean","window","location","hostname","match","ReactDOM","render","app01","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0685d6a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass About extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div><h1>About ... </h1></div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nAbout.propTypes = {\r\n\r\n};\r\n\r\nexport default About;","class Contact {\r\n    IdContact=0;\r\n    LastNameContact='';\r\n    FirstNameContact='';\r\n    AddressContact='';\r\n    CityContact='';\r\n    ZIPContact='';\r\n    FollowedContact=false;\r\n    constructor() {\r\n    }\r\n    \r\n  }\r\n\r\n\r\nexport default Contact","import React, { Component } from 'react';\r\nimport Contact from '../classes/contact';\r\n\r\nclass FicheContact extends Component {\r\n    contactselected; //Contact sélectionné\r\n    constructor(props) {\r\n        super(props);\r\n        if(this.props.contactselected !== undefined)\r\n            this.contactselected = this.props.contactselected;\r\n        else\r\n            this.contactselected = new Contact();\r\n        this.state = {selectContact:this.contactselected}\r\n        console.log(this.props.contactselected);\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({selectContact:nextProps.contactselected})\r\n    }\r\n\r\n    \r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    getFicheDetail() {\r\n        return (\r\n            <div>\r\n          <h3>{this.state.selectContact.FirstNameContact} {this.state.selectContact.LastNameContact}</h3>\r\n          <h3>{this.state.selectContact.AddressContact}</h3>\r\n          <h3>{this.state.selectContact.ZIPContact} {this.state.selectContact.CityContact}</h3>\r\n          </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.getFicheDetail()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default FicheContact;","import React, { Component } from 'react';\r\nimport Contact from '../classes/contact';\r\n\r\n\r\n\r\nclass AjoutContact extends Component {\r\n    //tabcontacts; // Tableau de contacts\r\n    contactselected; //Contact sélectionné\r\n    tabname =  {\r\n        IdContact:1,LastNameContact:2,FirstNameContact:3,\r\n        AddressContact:4, CityContact:5,ZIPContact:6,FollowedContact:7\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        /**\r\n        if(this.props.tabcontacts !== undefined)\r\n            this.tabcontacts = this.props.tabcontacts;\r\n        else\r\n            this.tabcontacts = [];\r\n        this.init();\r\n        this.state = {\r\n            tabContact:this.tabcontacts,\r\n            contactselected:this.contactselected\r\n        }\r\n        */\r\n       if(props.contact === undefined || props.contact === null)\r\n            this.init();\r\n        else\r\n            this.contactselected = this.props.contact;\r\n\r\n       this.state = {\r\n        contactselected:this.contactselected\r\n        }\r\n    }\r\n\r\n    init() {\r\n        this.contactselected =new Contact();\r\n        this.contactselected.IdContact =0;\r\n    }\r\n    \r\n    saisie = (e) => {\r\n       \r\n        this.contactselected = this.state.contactselected;\r\n        switch (parseInt(e.target.id))\r\n        {\r\n            case this.tabname.IdContact : \r\n                this.contactselected.IdContact = e.target.value;\r\n                break;\r\n            case this.tabname.FirstNameContact : \r\n                this.contactselected.FirstNameContact = e.target.value;\r\n                break;\r\n            case this.tabname.LastNameContact : \r\n                this.contactselected.LastNameContact = e.target.value;\r\n                break;\r\n            case this.tabname.CityContact : \r\n                this.contactselected.CityContact = e.target.value;\r\n                break;\r\n            case this.tabname.AddressContact : \r\n                this.contactselected.AddressContact = e.target.value;\r\n                break;\r\n            case this.tabname.FollowedContact : \r\n                this.contactselected.FollowedContact = e.target.value;\r\n                break;\r\n        }\r\n        this.setState(\r\n            {\r\n                contactselected:this.contactselected\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    submit = (e) => {\r\n        //this.tabcontacts = this.state.tabContact;\r\n        e.preventDefault(false);\r\n        if(this.contactselected.IdContact === 0) return;\r\n\r\n              \r\n        this.props.action(e,this.contactselected);\r\n        \r\n    }\r\n\r\n    getObjet(index) \r\n    {\r\n        switch (parseInt(index))\r\n        {\r\n            case this.tabname.IdContact : \r\n                return this.contactselected.IdContact;\r\n                \r\n            case this.tabname.FirstNameContact : \r\n                return this.contactselected.FirstNameContact;\r\n                \r\n            case this.tabname.LastNameContact : \r\n                return this.contactselected.LastNameContact;\r\n                \r\n            case this.tabname.CityContact : \r\n                return this.contactselected.CityContact;\r\n                \r\n            case this.tabname.AddressContact : \r\n                return this.contactselected.AddressContact;\r\n                \r\n            case this.tabname.FollowedContact : \r\n                return this.contactselected.FollowedContact;\r\n                \r\n        }\r\n    }\r\n\r\n    getlibelle(index)\r\n    {\r\n        switch (parseInt(index))\r\n        {\r\n            case this.tabname.IdContact : \r\n                return \"Id\";\r\n                \r\n            case this.tabname.FirstNameContact : \r\n                return \"Nom\";\r\n                \r\n            case this.tabname.LastNameContact : \r\n                return \"Prénom\";;\r\n                \r\n            case this.tabname.CityContact : \r\n                return \"Ville\";\r\n                \r\n            case this.tabname.AddressContact : \r\n                return \"Adresse\";\r\n                \r\n            case this.tabname.FollowedContact : \r\n                return \"Suivi\";\r\n                \r\n        }\r\n    }\r\n\r\n    getrenderform() {\r\n        let tab = [];\r\n        for(let i=1;i<=this.tabname.FollowedContact;i++) tab.push(i);\r\n         return tab.map((index) =>   <div class=\"form-group\">\r\n                    <label for={index}>{this.getlibelle(index)}</label>\r\n                    <input onChange={this.saisie} type=\"text\" \r\n                    value={this.getObjet(index)} \r\n                    class=\"form-control\" id={index} \r\n                    placeholder={\"Enter \"+this.getlibelle(index)} />\r\n                </div>);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form name=\"monForm\" novalidate \r\n                    onSubmit={this.submit}>\r\n                {this.getrenderform()}\r\n\r\n                <input type=\"submit\" value=\"Ok\"/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AjoutContact;\r\n\r\n/**\r\n * \r\n * <div class=\"form-group\">\r\n                    <label for={this.tabname.IdContact}>ID</label>\r\n                    <input onChange={this.saisie} type=\"text\" \r\n                    value={this.state.contactselected.IdContact} \r\n                    class=\"form-control\" id={this.tabname.IdContact} \r\n                    placeholder=\"Enter Id\"/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                <label for={this.tabname.LastNameContact}>Nom</label>\r\n                <input onChange={this.saisie} type=\"text\" \r\n                value={this.state.contactselected.LastNameContact} \r\n                class=\"form-control\" id={this.tabname.LastNameContact} \r\n                placeholder=\"Enter Nom\"/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                <label for={this.tabname.FirstNameContact}>Prénom</label>\r\n                <input onChange={this.saisie} type=\"text\" \r\n                value={this.state.contactselected.FirstNameContact } \r\n                class=\"form-control\" id={this.tabname.FirstNameContact} \r\n                placeholder=\"Enter Prénom\"/>\r\n                </div>\r\n                \r\n                <div class=\"form-group\">\r\n                <label for={this.tabname.AddressContact}>Adresse</label>\r\n                <input onChange={this.saisie} type=\"text\" \r\n                value={this.state.contactselected.AddressContact } \r\n                class=\"form-control\" id={this.tabname.AddressContact} \r\n                placeholder=\"Enter Adresse\"/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                <label for={this.tabname.CityContact}>Ville</label>\r\n                <input onChange={this.saisie} type=\"text\" \r\n                value={this.state.contactselected.CityContact } \r\n                class=\"form-control\" id={this.tabname.CityContact} \r\n                placeholder=\"Enter ville\"/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                <label for={this.tabname.ZIPContact}>Code postal</label>\r\n                <input onChange={this.saisie} type=\"text\" \r\n                value={this.state.contactselected.ZIPContact } \r\n                class=\"form-control\" id={this.tabname.ZIPContact} \r\n                placeholder=\"Enter Code Postal\"/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                <label for={this.tabname.FollowedContact}>A suivre</label>\r\n                <input onChange={this.saisie} type=\"checkbox\" \r\n                value={this.state.contactselected.FollowedContact } \r\n                class=\"form-control\" id={this.tabname.FollowedContact}/>\r\n                </div>\r\n */","import React, { Component } from 'react';\r\nimport FicheContact from './FicheContact';\r\nimport AjoutContact from './AjoutContact';\r\nimport Contact from '../classes/contact';\r\n//npm install axios\r\nimport axios from 'axios'; //API AXIOS pour communiquer avec une API REST par exemple\r\n\r\n\r\nconst apiUrl = `http://localhost:3000/user/`;\r\n\r\n\r\nclass ListeContacts extends Component {\r\n  tabcontacts; // Tableau de contacts\r\n  contactselected; //Contact sélectionné\r\n  bajout = false;\r\n  maxcontact = 10; //Max de contact\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectedContact = this.selectedContact.bind(this);\r\n    this.state = {\r\n        selectContact:undefined,\r\n        tabcontacts:[],\r\n        bajout:false,\r\n        bliste:true\r\n    }\r\n    this.getCreateTab();\r\n   \r\n  }\r\n\r\n  selectedContact(event) {\r\n    this.contactselected = this.tabcontacts.filter(\r\n        (contact) => contact.IdContact == event.target.id)[0];\r\n \r\n     this.setState({selectContact:this.contactselected});\r\n    \r\n  }\r\n  \r\n  selectedModContact = (event) => {\r\n    this.contactselected = this.tabcontacts.filter(\r\n        (contact) => contact.IdContact == event.target.id)[0];\r\n \r\n     this.setState({selectContact:this.contactselected});\r\n\r\n     this.bajout = !this.state.bajout;\r\n     this.bliste = !this.state.bliste\r\n     this.setState({bajout:this.bajout,bliste:this.bliste})\r\n  }\r\n\r\n  deleteContact= (event) => {\r\n    let tab = [];\r\n    tab = this.tabcontacts.filter(\r\n        (contact) => contact.IdContact != event.target.id);\r\n\r\n        axios.delete(apiUrl+event.target.id)\r\n        .then(res => {\r\n          console.log(\".. \"+res);\r\n          console.log(\"... \" + res.data);\r\n        },error => console.log(error))\r\n    this.setState({tabcontacts:tab});\r\n    \r\n  }\r\n  \r\n  ajout =(e)=> {\r\n      this.bajout = !this.state.bajout;\r\n      this.bliste = !this.state.bliste\r\n      this.setState({bajout:this.bajout,bliste:this.bliste,selectContact:undefined})\r\n  }\r\n\r\n  ajoutC =(e,contact)=> {\r\n    let tabC = this.state.tabcontacts;\r\n    this.bajout = !this.state.bajout;\r\n    this.bliste = true;\r\n    if(contact !== undefined && contact !== null){\r\n        const user = {\r\n            id :parseInt(contact.IdContact),\r\n            LastNameContact : contact.LastNameContact,\r\n            FirstNameContact: contact.FirstNameContact,\r\n            AddressContact:contact.AddressContact,\r\n            CityContact:contact.CityContact,\r\n            ZIPContact:contact.ZIPContact,\r\n            FollowedContact:contact.FollowedContact\r\n        };\r\n        tabC.push(contact);\r\n\r\n        axios.post(apiUrl, user)\r\n        .then(res => {\r\n          console.log(\".. \"+res);\r\n          console.log(\"... \" + res.data);\r\n        },error => console.log(error))\r\n    }\r\n   \r\n    this.setState({bajout:this.bajout,bliste:this.bliste});\r\n    this.reset();\r\n}\r\n\r\n    modifieC =(e,contact)=> {\r\n        let tabC = this.state.tabcontacts;\r\n        console.log(tabC);\r\n        this.bajout = !this.state.bajout;\r\n        this.bliste = true;\r\n        if(contact !== undefined && contact !== null){\r\n            const user = {\r\n                id :parseInt(contact.IdContact),\r\n                LastNameContact : contact.LastNameContact,\r\n                FirstNameContact: contact.FirstNameContact,\r\n                AddressContact:contact.AddressContact,\r\n                CityContact:contact.CityContact,\r\n                ZIPContact:contact.ZIPContact,\r\n                FollowedContact:contact.FollowedContact\r\n            };\r\n            \r\n            for(let i=0;i<tabC.length;i++) {\r\n                if(tabC[i].IdContact === user.id) {\r\n                    tabC[i] = contact;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            axios.put(apiUrl+user.id, user)\r\n            .then(res => {\r\n            console.log(\".. \"+res);\r\n            console.log(\"... \" + res.data);\r\n            },error => console.log(error))\r\n        }\r\n    \r\n        this.setState({bajout:this.bajout,bliste:this.bliste,tabcontacts:tabC})\r\n    }\r\n\r\n  reset() {\r\n    this.contactselected = undefined;\r\n    this.setState({selectContact:this.contactselected})\r\n  }\r\n\r\n  getFicheDetail() {\r\n      return (\r\n          <div>\r\n        <h3>{this.state.selectContact.FirstNameContact} {this.state.selectContact.LastNameContact}</h3>\r\n        <h3>{this.state.selectContact.AddressContact}</h3>\r\n        <h3>{this.state.selectContact.ZIPContact} {this.state.selectContact.CityContact}</h3>\r\n        </div>\r\n      )\r\n  }\r\n\r\n  getCreateTab()\r\n  {\r\n    this.tabcontacts = [];\r\n    axios.get(apiUrl)\r\n    .then(response => \r\n       {\r\n        for(let i=0;i<response.data.length;i++)\r\n            {\r\n            let ocontacts = new Contact();\r\n            ocontacts.IdContact = parseInt(response.data[i].id);\r\n            ocontacts.AddressContact = response.data[i].AddressContact;\r\n            ocontacts.ZIPContact = response.data[i].ZIPContact;\r\n            ocontacts.CityContact = response.data[i].CityContact;\r\n            ocontacts.LastNameContact = response.data[i].LastNameContact;\r\n            ocontacts.FirstNameContact = response.data[i].FirstNameContact;\r\n            ocontacts.FollowedContact = response.data[i].FollowedContact;\r\n            this.tabcontacts.push(ocontacts);\r\n            \r\n            }\r\n            this.setState({tabcontacts:this.tabcontacts})\r\n        }\r\n      \r\n  )\r\n\r\n\r\n  }\r\n\r\n  getAfficheListe() {\r\n      return this.state.tabcontacts.map((contact)=>\r\n      <tr><td><a href=\"#\" id={contact.IdContact} onClick={this.selectedContact}>{contact.IdContact}</a></td>\r\n      <td>{contact.LastNameContact}</td>\r\n      <td>{contact.FirstNameContact}</td>\r\n      <td><a href=\"#\" id={contact.IdContact} onClick={this.deleteContact}>DELETE</a></td>\r\n      <td><a href=\"#\" id={contact.IdContact} onClick={this.selectedModContact}>Modifier</a></td>\r\n      </tr>);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n  \r\n   }\r\n   \r\n    render() {\r\n        let bmodifC = false;\r\n        let bajoutC = false;\r\n        console.log(this.state.bajout);\r\n        console.log(this.state.selectContact);\r\n        if(this.state.bajout && this.state.selectContact !== undefined)   \r\n            bmodifC = true;\r\n        \r\n        if(this.state.bajout && this.state.selectContact === undefined)\r\n                    bajoutC = true;\r\n       \r\n        console.log(bajoutC);\r\n\r\n        return (\r\n            <div>\r\n                <button class=\"btn btn-success\" onClick={(e)=>this.reset()}>Reset</button>\r\n                &nbsp;&nbsp;&nbsp;\r\n                <button class=\"btn btn-success\" onClick={this.ajout}>Ajout</button>\r\n                <div>\r\n                { bmodifC === true && \r\n                <div><h1>Modification</h1>\r\n                 <AjoutContact action={this.modifieC}  contact={this.state.selectContact}   /></div>\r\n                }\r\n                </div>\r\n                <div>\r\n                { bajoutC === true && \r\n                <div><h1>Ajout</h1>\r\n                 <AjoutContact action={this.ajoutC}  /></div>\r\n                }\r\n                </div>\r\n                {this.state.bliste  && \r\n                <table class=\"table\">\r\n                <thead class=\"thead-dark\">\r\n                    <tr>\r\n                    <th scope=\"col\">N° de contact</th>\r\n                    <th scope=\"col\">First</th>\r\n                    <th scope=\"col\">Last</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {this.getAfficheListe()}\r\n                </tbody>\r\n                </table>\r\n                }\r\n                {this.state.selectContact !== undefined && \r\n                <div class=\"panel panel-default\"><h2>Fiche Sélectionnée : </h2>\r\n                 <FicheContact contactselected={this.state.selectContact}  />\r\n                  </div> }\r\n                  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListeContacts;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div><h1>HOME </h1></div>\r\n        );\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n\r\n};\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport About from './About';\r\nimport ListeContacts from './ListeContacts';\r\nimport Home from './Home';\r\n\r\n\r\nclass login extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {logged:false}\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n    \r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.logged);\r\n        if(this.state.logged)\r\n        {\r\n            return (\r\n            \r\n                <nav  class=\"navbar navbar-default\" >\r\n                <div class=\"container-fluid\" >\r\n                    <ul class=\"nav navbar-nav\">\r\n                   \r\n                    <li class=\"nav-item\">\r\n                        <Link class=\"nav-link\" to=\"/home\">Home</Link>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <Link class=\"nav-link\" to=\"/about\">About</Link>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <Link class=\"nav-link\" to=\"/Contact\">Mes Contacts</Link>\r\n                    </li>\r\n                    </ul>\r\n   \r\n                    <hr />\r\n\r\n                    <Route path=\"/home\"  component={Home} />\r\n                    <Route path=\"/about\" component={About} />\r\n                    <Route path=\"/Contact\" component={ListeContacts} />\r\n                    </div>                         \r\n            </nav>\r\n            \r\n            )\r\n        }\r\n        else{\r\n        return (\r\n                <input type=\"checkbox\" onChange={\r\n                    (e) => \r\n                    this.setState({logged:!this.state.logged})\r\n                }/>\r\n        );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default login;","import React from \"react\";\r\n//npm install react-router-dom\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Login from './composant/login';\r\n\r\nfunction MonRoute() {\r\n  return (\r\n    <Router>\r\n    <nav  class=\"navbar navbar-default\">\r\n      <div class=\"container-fluid\" id=\"menu\">\r\n        <ul class=\"nav navbar-nav\">\r\n        <li class=\"nav-item\">\r\n            <Link class=\"nav-link\" to=\"/\">Login</Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <Route path=\"/\" component={Login}/>\r\n        </div>        \r\n      </nav>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default MonRoute;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  MonRoute from './app01';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MonRoute/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}